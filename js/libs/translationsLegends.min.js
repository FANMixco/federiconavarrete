async function fetchData(e){try{const t=await fetch(e);return await t.json()}catch(e){console.error(e)}}function loadLegends(e){const t="../img/legends/",a=document.createDocumentFragment();e.forEach((e=>{const n=e.isActive?" active":"",s=document.createElement("div");s.className=`carousel-item col-md-4${n}`,s.innerHTML=`<div class="card"><div class="img-thumbnail"><a class="text-warning legend-link" target="_blank" href="https://${e.link}"><picture><source srcset="${t}${e.img}.webp" type="image/webp"><source srcset="${t}${e.img}.jpg" type="image/jpeg"><img src="${t}${e.img}.jpg" loading='lazy' alt="${e.title}" class="cards-row"></picture><div class="caption"><p><b>${e.title}</b></p></div></a></div></div>`,a.appendChild(s)})),$("#divLegends").append(a)}window.addEventListener("DOMContentLoaded",(async()=>{try{const e=new URL(window.location.href).searchParams.get("lang");loadLegends((await fetchData(`../js/i18n/${e||"en"}/legends.json`)).legendsList)}catch(e){console.error(e)}$("#legendsCarousel").on("slide.bs.carousel",(e=>{const t=".carousel-item",a=$(e.relatedTarget),n=$(t).length;let s=a.index();if(s>=n-2){let a=3-(n-s);for(let n=0;n<a;n++)$(t).eq("left"==e.direction?n:0).appendTo(".carousel-inner")}}))}));